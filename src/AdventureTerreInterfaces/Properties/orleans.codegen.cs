//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace AdventureTerreInterfaces.GrainInterfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using System.Collections;
    using AdventureTerreInterfaces.Models;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class CharacterGrainFactory
    {
        

                        public static AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain), -1605359937, primaryKey));
                        }

                        public static AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain), -1605359937, primaryKey, grainClassNamePrefix));
                        }

            public static AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return CharacterGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
            ".ICharacterGrain")]
        internal class CharacterGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain
        {
            

            public static AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain), (global::Orleans.Runtime.GrainReference gr) => { return new CharacterGrainReference(gr);}, grainRef, -1605359937);
            }
            
            protected internal CharacterGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal CharacterGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1605359937;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
                        ".ICharacterGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                CharacterGrainReference input = ((CharacterGrainReference)(original));
                return ((CharacterGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                CharacterGrainReference input = ((CharacterGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return CharacterGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return CharacterGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.Name()
            {

                return base.InvokeMethodAsync<System.String>(-67873697, new object[] {} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.Description(AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain gameState)
            {

                return base.InvokeMethodAsync<System.String>(1545958582, new object[] {gameState is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.GameStateGrainFactory.Cast(gameState.AsReference()) : gameState} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.Response(AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain gameState)
            {

                return base.InvokeMethodAsync<System.String>(1595978441, new object[] {gameState is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.GameStateGrainFactory.Cast(gameState.AsReference()) : gameState} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.SetInfo(AdventureTerreInterfaces.Models.CharacterInfo info, AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain player)
            {

                return base.InvokeMethodAsync<object>(440052565, new object[] {info, player is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.PlayerGrainFactory.Cast(player.AsReference()) : player} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.SetPlayerGuid(System.Guid playerGuid)
            {

                return base.InvokeMethodAsync<object>(970082334, new object[] {playerGuid} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.SetRoomGrain(AdventureTerreInterfaces.GrainInterfaces.IRoomGrain room)
            {

                return base.InvokeMethodAsync<object>(-1091530947, new object[] {room is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.RoomGrainFactory.Cast(room.AsReference()) : room} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.RoomGrain()
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain>(2108089454, new object[] {} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.GetPrintableInfo()
            {

                return base.InvokeMethodAsync<System.String>(1837777672, new object[] {} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.ClearGrainAndState()
            {

                return base.InvokeMethodAsync<object>(-1370817314, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
        ".ICharacterGrain", -1605359937)]
    internal class CharacterGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1605359937;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {{                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1605359937:  // ICharacterGrain
                        switch (methodId)
                        {
                            case -67873697: 
                                return ((ICharacterGrain)grain).Name().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1545958582: 
                                return ((ICharacterGrain)grain).Description((IGameStateGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1595978441: 
                                return ((ICharacterGrain)grain).Response((IGameStateGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 440052565: 
                                return ((ICharacterGrain)grain).SetInfo((AdventureTerreInterfaces.Models.CharacterInfo)arguments[0], (IPlayerGrain)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 970082334: 
                                return ((ICharacterGrain)grain).SetPlayerGuid((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1091530947: 
                                return ((ICharacterGrain)grain).SetRoomGrain((IRoomGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2108089454: 
                                return ((ICharacterGrain)grain).RoomGrain().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1837777672: 
                                return ((ICharacterGrain)grain).GetPrintableInfo().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1370817314: 
                                return ((ICharacterGrain)grain).ClearGrainAndState().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }}
            catch(Exception ex)
            {{
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }}
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1605359937:  // ICharacterGrain
                    switch (methodId)
                    {
                        case -67873697:
                            return "Name";
                    case 1545958582:
                            return "Description";
                    case 1595978441:
                            return "Response";
                    case 440052565:
                            return "SetInfo";
                    case 970082334:
                            return "SetPlayerGuid";
                    case -1091530947:
                            return "SetRoomGrain";
                    case 2108089454:
                            return "RoomGrain";
                    case 1837777672:
                            return "GetPrintableInfo";
                    case -1370817314:
                            return "ClearGrainAndState";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GameStateGrainFactory
    {
        

                        public static AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain), -714406805, primaryKey));
                        }

                        public static AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain), -714406805, primaryKey, grainClassNamePrefix));
                        }

            public static AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GameStateGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
            ".IGameStateGrain")]
        internal class GameStateGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain
        {
            

            public static AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain), (global::Orleans.Runtime.GrainReference gr) => { return new GameStateGrainReference(gr);}, grainRef, -714406805);
            }
            
            protected internal GameStateGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GameStateGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -714406805;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
                        ".IGameStateGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GameStateGrainReference input = ((GameStateGrainReference)(original));
                return ((GameStateGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GameStateGrainReference input = ((GameStateGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GameStateGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GameStateGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain.SetGameStateFlags(Dictionary<String,Boolean> newFlags)
            {

                return base.InvokeMethodAsync<object>(527644790, new object[] {newFlags} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain.InitGameState(AdventureTerreInterfaces.Models.MapInfo mapInfo)
            {

                return base.InvokeMethodAsync<object>(1998046334, new object[] {mapInfo} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain.UpdateGameState(string key, bool value)
            {

                return base.InvokeMethodAsync<object>(-1694173852, new object[] {key, value} );
            }
            
            System.Threading.Tasks.Task<bool> AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain.GetStateForKey(string key)
            {

                return base.InvokeMethodAsync<System.Boolean>(72428025, new object[] {key} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain.OutputGameState()
            {

                return base.InvokeMethodAsync<System.String>(1490231051, new object[] {} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain.ClearGrainAndState()
            {

                return base.InvokeMethodAsync<object>(-1370817314, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
        ".IGameStateGrain", -714406805)]
    internal class GameStateGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -714406805;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {{                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -714406805:  // IGameStateGrain
                        switch (methodId)
                        {
                            case 527644790: 
                                return ((IGameStateGrain)grain).SetGameStateFlags((Dictionary<String,Boolean>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1998046334: 
                                return ((IGameStateGrain)grain).InitGameState((AdventureTerreInterfaces.Models.MapInfo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1694173852: 
                                return ((IGameStateGrain)grain).UpdateGameState((String)arguments[0], (Boolean)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 72428025: 
                                return ((IGameStateGrain)grain).GetStateForKey((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1490231051: 
                                return ((IGameStateGrain)grain).OutputGameState().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1370817314: 
                                return ((IGameStateGrain)grain).ClearGrainAndState().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }}
            catch(Exception ex)
            {{
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }}
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -714406805:  // IGameStateGrain
                    switch (methodId)
                    {
                        case 527644790:
                            return "SetGameStateFlags";
                    case 1998046334:
                            return "InitGameState";
                    case -1694173852:
                            return "UpdateGameState";
                    case 72428025:
                            return "GetStateForKey";
                    case 1490231051:
                            return "OutputGameState";
                    case -1370817314:
                            return "ClearGrainAndState";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class MonsterGrainFactory
    {
        

                        public static AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain), 1682006839, primaryKey));
                        }

                        public static AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain), 1682006839, primaryKey, grainClassNamePrefix));
                        }

            public static AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return MonsterGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
            ".IMonsterGrain")]
        internal class MonsterGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain
        {
            

            public static AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain), (global::Orleans.Runtime.GrainReference gr) => { return new MonsterGrainReference(gr);}, grainRef, 1682006839);
            }
            
            protected internal MonsterGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal MonsterGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1682006839;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
                        ".IMonsterGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                MonsterGrainReference input = ((MonsterGrainReference)(original));
                return ((MonsterGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                MonsterGrainReference input = ((MonsterGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return MonsterGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1605359937)) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return MonsterGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.Models.MonsterInfo> AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain.GetInfo()
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.Models.MonsterInfo>(-1168913303, new object[] {} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain.Kill(AdventureTerreInterfaces.GrainInterfaces.IRoomGrain room)
            {

                return base.InvokeMethodAsync<System.String>(122057053, new object[] {room is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.RoomGrainFactory.Cast(room.AsReference()) : room} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.Name()
            {

                return base.InvokeMethodAsync<System.String>(-67873697, new object[] {} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.Description(AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain gameState)
            {

                return base.InvokeMethodAsync<System.String>(1545958582, new object[] {gameState is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.GameStateGrainFactory.Cast(gameState.AsReference()) : gameState} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.Response(AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain gameState)
            {

                return base.InvokeMethodAsync<System.String>(1595978441, new object[] {gameState is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.GameStateGrainFactory.Cast(gameState.AsReference()) : gameState} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.SetInfo(AdventureTerreInterfaces.Models.CharacterInfo info, AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain player)
            {

                return base.InvokeMethodAsync<object>(440052565, new object[] {info, player is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.PlayerGrainFactory.Cast(player.AsReference()) : player} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.SetPlayerGuid(System.Guid playerGuid)
            {

                return base.InvokeMethodAsync<object>(970082334, new object[] {playerGuid} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.SetRoomGrain(AdventureTerreInterfaces.GrainInterfaces.IRoomGrain room)
            {

                return base.InvokeMethodAsync<object>(-1091530947, new object[] {room is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.RoomGrainFactory.Cast(room.AsReference()) : room} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.RoomGrain()
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain>(2108089454, new object[] {} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.GetPrintableInfo()
            {

                return base.InvokeMethodAsync<System.String>(1837777672, new object[] {} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.ClearGrainAndState()
            {

                return base.InvokeMethodAsync<object>(-1370817314, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
        ".IMonsterGrain", 1682006839)]
    internal class MonsterGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1682006839;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {{                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1682006839:  // IMonsterGrain
                        switch (methodId)
                        {
                            case -1168913303: 
                                return ((IMonsterGrain)grain).GetInfo().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 122057053: 
                                return ((IMonsterGrain)grain).Kill((IRoomGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -67873697: 
                                return ((IMonsterGrain)grain).Name().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1545958582: 
                                return ((IMonsterGrain)grain).Description((IGameStateGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1595978441: 
                                return ((IMonsterGrain)grain).Response((IGameStateGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 440052565: 
                                return ((IMonsterGrain)grain).SetInfo((AdventureTerreInterfaces.Models.CharacterInfo)arguments[0], (IPlayerGrain)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 970082334: 
                                return ((IMonsterGrain)grain).SetPlayerGuid((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1091530947: 
                                return ((IMonsterGrain)grain).SetRoomGrain((IRoomGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2108089454: 
                                return ((IMonsterGrain)grain).RoomGrain().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1837777672: 
                                return ((IMonsterGrain)grain).GetPrintableInfo().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1370817314: 
                                return ((IMonsterGrain)grain).ClearGrainAndState().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1605359937:  // ICharacterGrain
                        switch (methodId)
                        {
                            case -67873697: 
                                return ((ICharacterGrain)grain).Name().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1545958582: 
                                return ((ICharacterGrain)grain).Description((IGameStateGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1595978441: 
                                return ((ICharacterGrain)grain).Response((IGameStateGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 440052565: 
                                return ((ICharacterGrain)grain).SetInfo((AdventureTerreInterfaces.Models.CharacterInfo)arguments[0], (IPlayerGrain)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 970082334: 
                                return ((ICharacterGrain)grain).SetPlayerGuid((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1091530947: 
                                return ((ICharacterGrain)grain).SetRoomGrain((IRoomGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2108089454: 
                                return ((ICharacterGrain)grain).RoomGrain().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1837777672: 
                                return ((ICharacterGrain)grain).GetPrintableInfo().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1370817314: 
                                return ((ICharacterGrain)grain).ClearGrainAndState().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }}
            catch(Exception ex)
            {{
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }}
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1682006839:  // IMonsterGrain
                    switch (methodId)
                    {
                        case -1168913303:
                            return "GetInfo";
                    case 122057053:
                            return "Kill";
                    case -67873697:
                            return "Name";
                    case 1545958582:
                            return "Description";
                    case 1595978441:
                            return "Response";
                    case 440052565:
                            return "SetInfo";
                    case 970082334:
                            return "SetPlayerGuid";
                    case -1091530947:
                            return "SetRoomGrain";
                    case 2108089454:
                            return "RoomGrain";
                    case 1837777672:
                            return "GetPrintableInfo";
                    case -1370817314:
                            return "ClearGrainAndState";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1605359937:  // ICharacterGrain
                    switch (methodId)
                    {
                        case -67873697:
                            return "Name";
                    case 1545958582:
                            return "Description";
                    case 1595978441:
                            return "Response";
                    case 440052565:
                            return "SetInfo";
                    case 970082334:
                            return "SetPlayerGuid";
                    case -1091530947:
                            return "SetRoomGrain";
                    case 2108089454:
                            return "RoomGrain";
                    case 1837777672:
                            return "GetPrintableInfo";
                    case -1370817314:
                            return "ClearGrainAndState";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class NPCGrainFactory
    {
        

                        public static AdventureTerreInterfaces.GrainInterfaces.INPCGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.INPCGrain), 1014183572, primaryKey));
                        }

                        public static AdventureTerreInterfaces.GrainInterfaces.INPCGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.INPCGrain), 1014183572, primaryKey, grainClassNamePrefix));
                        }

            public static AdventureTerreInterfaces.GrainInterfaces.INPCGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return NPCGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
            ".INPCGrain")]
        internal class NPCGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, AdventureTerreInterfaces.GrainInterfaces.INPCGrain
        {
            

            public static AdventureTerreInterfaces.GrainInterfaces.INPCGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (AdventureTerreInterfaces.GrainInterfaces.INPCGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.INPCGrain), (global::Orleans.Runtime.GrainReference gr) => { return new NPCGrainReference(gr);}, grainRef, 1014183572);
            }
            
            protected internal NPCGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal NPCGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1014183572;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
                        ".INPCGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                NPCGrainReference input = ((NPCGrainReference)(original));
                return ((NPCGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                NPCGrainReference input = ((NPCGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return NPCGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1605359937)) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return NPCGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.Models.NPCInfo> AdventureTerreInterfaces.GrainInterfaces.INPCGrain.GetInfo()
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.Models.NPCInfo>(-1168913303, new object[] {} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.Name()
            {

                return base.InvokeMethodAsync<System.String>(-67873697, new object[] {} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.Description(AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain gameState)
            {

                return base.InvokeMethodAsync<System.String>(1545958582, new object[] {gameState is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.GameStateGrainFactory.Cast(gameState.AsReference()) : gameState} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.Response(AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain gameState)
            {

                return base.InvokeMethodAsync<System.String>(1595978441, new object[] {gameState is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.GameStateGrainFactory.Cast(gameState.AsReference()) : gameState} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.SetInfo(AdventureTerreInterfaces.Models.CharacterInfo info, AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain player)
            {

                return base.InvokeMethodAsync<object>(440052565, new object[] {info, player is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.PlayerGrainFactory.Cast(player.AsReference()) : player} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.SetPlayerGuid(System.Guid playerGuid)
            {

                return base.InvokeMethodAsync<object>(970082334, new object[] {playerGuid} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.SetRoomGrain(AdventureTerreInterfaces.GrainInterfaces.IRoomGrain room)
            {

                return base.InvokeMethodAsync<object>(-1091530947, new object[] {room is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.RoomGrainFactory.Cast(room.AsReference()) : room} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.RoomGrain()
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain>(2108089454, new object[] {} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.GetPrintableInfo()
            {

                return base.InvokeMethodAsync<System.String>(1837777672, new object[] {} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain.ClearGrainAndState()
            {

                return base.InvokeMethodAsync<object>(-1370817314, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
        ".INPCGrain", 1014183572)]
    internal class NPCGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1014183572;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {{                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1014183572:  // INPCGrain
                        switch (methodId)
                        {
                            case -1168913303: 
                                return ((INPCGrain)grain).GetInfo().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -67873697: 
                                return ((INPCGrain)grain).Name().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1545958582: 
                                return ((INPCGrain)grain).Description((IGameStateGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1595978441: 
                                return ((INPCGrain)grain).Response((IGameStateGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 440052565: 
                                return ((INPCGrain)grain).SetInfo((CharacterInfo)arguments[0], (IPlayerGrain)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 970082334: 
                                return ((INPCGrain)grain).SetPlayerGuid((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1091530947: 
                                return ((INPCGrain)grain).SetRoomGrain((IRoomGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2108089454: 
                                return ((INPCGrain)grain).RoomGrain().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1837777672: 
                                return ((INPCGrain)grain).GetPrintableInfo().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1370817314: 
                                return ((INPCGrain)grain).ClearGrainAndState().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1605359937:  // ICharacterGrain
                        switch (methodId)
                        {
                            case -67873697: 
                                return ((ICharacterGrain)grain).Name().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1545958582: 
                                return ((ICharacterGrain)grain).Description((IGameStateGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1595978441: 
                                return ((ICharacterGrain)grain).Response((IGameStateGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 440052565: 
                                return ((ICharacterGrain)grain).SetInfo((CharacterInfo)arguments[0], (IPlayerGrain)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 970082334: 
                                return ((ICharacterGrain)grain).SetPlayerGuid((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1091530947: 
                                return ((ICharacterGrain)grain).SetRoomGrain((IRoomGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2108089454: 
                                return ((ICharacterGrain)grain).RoomGrain().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1837777672: 
                                return ((ICharacterGrain)grain).GetPrintableInfo().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1370817314: 
                                return ((ICharacterGrain)grain).ClearGrainAndState().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }}
            catch(Exception ex)
            {{
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }}
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1014183572:  // INPCGrain
                    switch (methodId)
                    {
                        case -1168913303:
                            return "GetInfo";
                    case -67873697:
                            return "Name";
                    case 1545958582:
                            return "Description";
                    case 1595978441:
                            return "Response";
                    case 440052565:
                            return "SetInfo";
                    case 970082334:
                            return "SetPlayerGuid";
                    case -1091530947:
                            return "SetRoomGrain";
                    case 2108089454:
                            return "RoomGrain";
                    case 1837777672:
                            return "GetPrintableInfo";
                    case -1370817314:
                            return "ClearGrainAndState";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1605359937:  // ICharacterGrain
                    switch (methodId)
                    {
                        case -67873697:
                            return "Name";
                    case 1545958582:
                            return "Description";
                    case 1595978441:
                            return "Response";
                    case 440052565:
                            return "SetInfo";
                    case 970082334:
                            return "SetPlayerGuid";
                    case -1091530947:
                            return "SetRoomGrain";
                    case 2108089454:
                            return "RoomGrain";
                    case 1837777672:
                            return "GetPrintableInfo";
                    case -1370817314:
                            return "ClearGrainAndState";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class PlayerGrainFactory
    {
        

                        public static AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain), 1045462644, primaryKey));
                        }

                        public static AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain), 1045462644, primaryKey, grainClassNamePrefix));
                        }

            public static AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return PlayerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
            ".IPlayerGrain")]
        internal class PlayerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain
        {
            

            public static AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new PlayerGrainReference(gr);}, grainRef, 1045462644);
            }
            
            protected internal PlayerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal PlayerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1045462644;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
                        ".IPlayerGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PlayerGrainReference input = ((PlayerGrainReference)(original));
                return ((PlayerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PlayerGrainReference input = ((PlayerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PlayerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return PlayerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<System.Guid> AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.GetPlayerGuid()
            {

                return base.InvokeMethodAsync<System.Guid>(1000798450, new object[] {} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.ProcessMessage(string message)
            {

                return base.InvokeMethodAsync<object>(165839099, new object[] {message} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.AddRoom(AdventureTerreInterfaces.GrainInterfaces.IRoomGrain room)
            {

                return base.InvokeMethodAsync<object>(2015221033, new object[] {room is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.RoomGrainFactory.Cast(room.AsReference()) : room} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.AddMonster(AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain monster)
            {

                return base.InvokeMethodAsync<object>(-87135492, new object[] {monster is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.MonsterGrainFactory.Cast(monster.AsReference()) : monster} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.AddNpc(AdventureTerreInterfaces.GrainInterfaces.INPCGrain npc)
            {

                return base.InvokeMethodAsync<object>(-2011836369, new object[] {npc is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.NPCGrainFactory.Cast(npc.AsReference()) : npc} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain> AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.GetRoomGrainByRoomId(long id)
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain>(-1842518931, new object[] {id} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain> AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.GetRandomRoom()
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain>(266555913, new object[] {} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.Models.PlayerInfo> AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.GetPlayerInfo()
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.Models.PlayerInfo>(230104561, new object[] {} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.Name()
            {

                return base.InvokeMethodAsync<System.String>(-67873697, new object[] {} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.SetName(string name)
            {

                return base.InvokeMethodAsync<object>(316304768, new object[] {name} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.SetInfoGuid(System.Guid guid)
            {

                return base.InvokeMethodAsync<object>(2059873073, new object[] {guid} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain> AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.RoomGrain()
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain>(2108089454, new object[] {} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.Die()
            {

                return base.InvokeMethodAsync<object>(-1632993044, new object[] {} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.Play(string command)
            {

                return base.InvokeMethodAsync<System.String>(646042025, new object[] {command} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.ClearGrainAndState()
            {

                return base.InvokeMethodAsync<object>(-1370817314, new object[] {} );
            }
            
            System.Threading.Tasks.Task<string[]> AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.GetPlayerHistory()
            {

                return base.InvokeMethodAsync<System.String[]>(2080693924, new object[] {} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain> AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.GetGameState()
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain>(1481985929, new object[] {} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.InitGameState(AdventureTerreInterfaces.Models.MapInfo mapInfo)
            {

                return base.InvokeMethodAsync<object>(1998046334, new object[] {mapInfo} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.SetVersion(int newVersion)
            {

                return base.InvokeMethodAsync<object>(1879770194, new object[] {newVersion} );
            }
            
            System.Threading.Tasks.Task<int> AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain.Version()
            {

                return base.InvokeMethodAsync<System.Int32>(1048074757, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
        ".IPlayerGrain", 1045462644)]
    internal class PlayerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1045462644;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {{                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1045462644:  // IPlayerGrain
                        switch (methodId)
                        {
                            case 1000798450: 
                                return ((IPlayerGrain)grain).GetPlayerGuid().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 165839099: 
                                return ((IPlayerGrain)grain).ProcessMessage((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2015221033: 
                                return ((IPlayerGrain)grain).AddRoom((IRoomGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -87135492: 
                                return ((IPlayerGrain)grain).AddMonster((IMonsterGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2011836369: 
                                return ((IPlayerGrain)grain).AddNpc((INPCGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1842518931: 
                                return ((IPlayerGrain)grain).GetRoomGrainByRoomId((Int64)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 266555913: 
                                return ((IPlayerGrain)grain).GetRandomRoom().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 230104561: 
                                return ((IPlayerGrain)grain).GetPlayerInfo().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -67873697: 
                                return ((IPlayerGrain)grain).Name().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 316304768: 
                                return ((IPlayerGrain)grain).SetName((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2059873073: 
                                return ((IPlayerGrain)grain).SetInfoGuid((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2108089454: 
                                return ((IPlayerGrain)grain).RoomGrain().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1632993044: 
                                return ((IPlayerGrain)grain).Die().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 646042025: 
                                return ((IPlayerGrain)grain).Play((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1370817314: 
                                return ((IPlayerGrain)grain).ClearGrainAndState().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2080693924: 
                                return ((IPlayerGrain)grain).GetPlayerHistory().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1481985929: 
                                return ((IPlayerGrain)grain).GetGameState().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1998046334: 
                                return ((IPlayerGrain)grain).InitGameState((MapInfo)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1879770194: 
                                return ((IPlayerGrain)grain).SetVersion((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1048074757: 
                                return ((IPlayerGrain)grain).Version().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }}
            catch(Exception ex)
            {{
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }}
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1045462644:  // IPlayerGrain
                    switch (methodId)
                    {
                        case 1000798450:
                            return "GetPlayerGuid";
                    case 165839099:
                            return "ProcessMessage";
                    case 2015221033:
                            return "AddRoom";
                    case -87135492:
                            return "AddMonster";
                    case -2011836369:
                            return "AddNpc";
                    case -1842518931:
                            return "GetRoomGrainByRoomId";
                    case 266555913:
                            return "GetRandomRoom";
                    case 230104561:
                            return "GetPlayerInfo";
                    case -67873697:
                            return "Name";
                    case 316304768:
                            return "SetName";
                    case 2059873073:
                            return "SetInfoGuid";
                    case 2108089454:
                            return "RoomGrain";
                    case -1632993044:
                            return "Die";
                    case 646042025:
                            return "Play";
                    case -1370817314:
                            return "ClearGrainAndState";
                    case 2080693924:
                            return "GetPlayerHistory";
                    case 1481985929:
                            return "GetGameState";
                    case 1998046334:
                            return "InitGameState";
                    case 1879770194:
                            return "SetVersion";
                    case 1048074757:
                            return "Version";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class PushNotifierGrainFactory
    {
        

                        public static AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain), -115185115, primaryKey));
                        }

                        public static AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain), -115185115, primaryKey, grainClassNamePrefix));
                        }

                        public static AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain), -115185115, primaryKey));
                        }

                        public static AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain), -115185115, primaryKey, grainClassNamePrefix));
                        }

            public static AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return PushNotifierGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
            ".IPushNotifierGrain")]
        internal class PushNotifierGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain
        {
            

            public static AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain), (global::Orleans.Runtime.GrainReference gr) => { return new PushNotifierGrainReference(gr);}, grainRef, -115185115);
            }
            
            protected internal PushNotifierGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal PushNotifierGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -115185115;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
                        ".IPushNotifierGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PushNotifierGrainReference input = ((PushNotifierGrainReference)(original));
                return ((PushNotifierGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PushNotifierGrainReference input = ((PushNotifierGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PushNotifierGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return PushNotifierGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain.SendMessage(string message)
            {

                return base.InvokeMethodAsync<object>(1983731744, new object[] {message} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain.SendMessage(string message, string recipient)
            {

                return base.InvokeMethodAsync<object>(-419561747, new object[] {message, recipient} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IPushNotifierGrain.ClearGrainAndState()
            {

                return base.InvokeMethodAsync<object>(-1370817314, new object[] {} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
        ".IPushNotifierGrain", -115185115)]
    internal class PushNotifierGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -115185115;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {{                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -115185115:  // IPushNotifierGrain
                        switch (methodId)
                        {
                            case 1983731744: 
                                return ((IPushNotifierGrain)grain).SendMessage((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -419561747: 
                                return ((IPushNotifierGrain)grain).SendMessage((String)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1370817314: 
                                return ((IPushNotifierGrain)grain).ClearGrainAndState().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }}
            catch(Exception ex)
            {{
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }}
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -115185115:  // IPushNotifierGrain
                    switch (methodId)
                    {
                        case 1983731744:
                            return "SendMessage";
                    case -419561747:
                            return "SendMessage";
                    case -1370817314:
                            return "ClearGrainAndState";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class RoomGrainFactory
    {
        

                        public static AdventureTerreInterfaces.GrainInterfaces.IRoomGrain GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IRoomGrain), 610565351, primaryKey));
                        }

                        public static AdventureTerreInterfaces.GrainInterfaces.IRoomGrain GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IRoomGrain), 610565351, primaryKey, grainClassNamePrefix));
                        }

            public static AdventureTerreInterfaces.GrainInterfaces.IRoomGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return RoomGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
            ".IRoomGrain")]
        internal class RoomGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, AdventureTerreInterfaces.GrainInterfaces.IRoomGrain
        {
            

            public static AdventureTerreInterfaces.GrainInterfaces.IRoomGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (AdventureTerreInterfaces.GrainInterfaces.IRoomGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IRoomGrain), (global::Orleans.Runtime.GrainReference gr) => { return new RoomGrainReference(gr);}, grainRef, 610565351);
            }
            
            protected internal RoomGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal RoomGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 610565351;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
                        ".IRoomGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                RoomGrainReference input = ((RoomGrainReference)(original));
                return ((RoomGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                RoomGrainReference input = ((RoomGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return RoomGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return RoomGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.Description(AdventureTerreInterfaces.Models.PlayerInfo whoisAsking, AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain gameState)
            {

                return base.InvokeMethodAsync<System.String>(1171509521, new object[] {whoisAsking, gameState is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.GameStateGrainFactory.Cast(gameState.AsReference()) : gameState} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.SetInfo(AdventureTerreInterfaces.Models.RoomInfo info, System.Guid rootGuid)
            {

                return base.InvokeMethodAsync<object>(1141864742, new object[] {info, rootGuid} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.Name()
            {

                return base.InvokeMethodAsync<System.String>(-67873697, new object[] {} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain> AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.ExitTo(string direction, AdventureTerreInterfaces.GrainInterfaces.IGameStateGrain gameState)
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain>(1494795367, new object[] {direction, gameState is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.GameStateGrainFactory.Cast(gameState.AsReference()) : gameState} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain> AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.ExitTo(string direction, AdventureTerreInterfaces.GrainInterfaces.ICharacterGrain character)
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.GrainInterfaces.IRoomGrain>(-1976773196, new object[] {direction, character is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.CharacterGrainFactory.Cast(character.AsReference()) : character} );
            }
            
            System.Threading.Tasks.Task<long> AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.RoomId()
            {

                return base.InvokeMethodAsync<System.Int64>(-1179561461, new object[] {} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.Enter(AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain player)
            {

                return base.InvokeMethodAsync<object>(-568647742, new object[] {player is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.PlayerGrainFactory.Cast(player.AsReference()) : player} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.Exit(AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain player)
            {

                return base.InvokeMethodAsync<object>(830465437, new object[] {player is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.PlayerGrainFactory.Cast(player.AsReference()) : player} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.Enter(AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain monster)
            {

                return base.InvokeMethodAsync<object>(1814198720, new object[] {monster is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.MonsterGrainFactory.Cast(monster.AsReference()) : monster} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.Exit(AdventureTerreInterfaces.GrainInterfaces.IMonsterGrain monster)
            {

                return base.InvokeMethodAsync<object>(-1087910179, new object[] {monster is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.MonsterGrainFactory.Cast(monster.AsReference()) : monster} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.Enter(AdventureTerreInterfaces.GrainInterfaces.INPCGrain npc)
            {

                return base.InvokeMethodAsync<object>(242302708, new object[] {npc is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.NPCGrainFactory.Cast(npc.AsReference()) : npc} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.Exit(AdventureTerreInterfaces.GrainInterfaces.INPCGrain npc)
            {

                return base.InvokeMethodAsync<object>(1425340485, new object[] {npc is global::Orleans.Grain ? AdventureTerreInterfaces.GrainInterfaces.NPCGrainFactory.Cast(npc.AsReference()) : npc} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.Drop(AdventureTerreInterfaces.Models.Thing thing)
            {

                return base.InvokeMethodAsync<object>(1453036231, new object[] {thing} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.Take(AdventureTerreInterfaces.Models.Thing thing)
            {

                return base.InvokeMethodAsync<object>(1542534434, new object[] {thing} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.Models.Thing> AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.FindThing(string name)
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.Models.Thing>(-1840220455, new object[] {name} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.Models.PlayerInfo> AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.FindPlayer(string name)
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.Models.PlayerInfo>(22289778, new object[] {name} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.Models.MonsterInfo> AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.FindMonster(string name)
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.Models.MonsterInfo>(-649945656, new object[] {name} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.Models.NPCInfo> AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.FindNpc(string name)
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.Models.NPCInfo>(2134119307, new object[] {name} );
            }
            
            System.Threading.Tasks.Task<AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain[]> AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.GetPlayersInRoom()
            {

                return base.InvokeMethodAsync<AdventureTerreInterfaces.GrainInterfaces.IPlayerGrain[]>(1848004524, new object[] {} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.ClearGrainAndState()
            {

                return base.InvokeMethodAsync<object>(-1370817314, new object[] {} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.TriggerStateSave()
            {

                return base.InvokeMethodAsync<object>(2141844554, new object[] {} );
            }
            
            System.Threading.Tasks.Task<string> AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.GetPrintableInfo()
            {

                return base.InvokeMethodAsync<System.String>(1837777672, new object[] {} );
            }
            
            System.Threading.Tasks.Task AdventureTerreInterfaces.GrainInterfaces.IRoomGrain.UpdateThing(AdventureTerreInterfaces.Models.Thing updatedThing)
            {

                return base.InvokeMethodAsync<object>(-1323204773, new object[] {updatedThing} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
        ".IRoomGrain", 610565351)]
    internal class RoomGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 610565351;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {{                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 610565351:  // IRoomGrain
                        switch (methodId)
                        {
                            case 1171509521: 
                                return ((IRoomGrain)grain).Description((PlayerInfo)arguments[0], (IGameStateGrain)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1141864742: 
                                return ((IRoomGrain)grain).SetInfo((RoomInfo)arguments[0], (Guid)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -67873697: 
                                return ((IRoomGrain)grain).Name().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1494795367: 
                                return ((IRoomGrain)grain).ExitTo((String)arguments[0], (IGameStateGrain)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1976773196: 
                                return ((IRoomGrain)grain).ExitTo((String)arguments[0], (ICharacterGrain)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1179561461: 
                                return ((IRoomGrain)grain).RoomId().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -568647742: 
                                return ((IRoomGrain)grain).Enter((IPlayerGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 830465437: 
                                return ((IRoomGrain)grain).Exit((IPlayerGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1814198720: 
                                return ((IRoomGrain)grain).Enter((IMonsterGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1087910179: 
                                return ((IRoomGrain)grain).Exit((IMonsterGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 242302708: 
                                return ((IRoomGrain)grain).Enter((INPCGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1425340485: 
                                return ((IRoomGrain)grain).Exit((INPCGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1453036231: 
                                return ((IRoomGrain)grain).Drop((Thing)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1542534434: 
                                return ((IRoomGrain)grain).Take((Thing)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1840220455: 
                                return ((IRoomGrain)grain).FindThing((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 22289778: 
                                return ((IRoomGrain)grain).FindPlayer((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -649945656: 
                                return ((IRoomGrain)grain).FindMonster((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2134119307: 
                                return ((IRoomGrain)grain).FindNpc((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1848004524: 
                                return ((IRoomGrain)grain).GetPlayersInRoom().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1370817314: 
                                return ((IRoomGrain)grain).ClearGrainAndState().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2141844554: 
                                return ((IRoomGrain)grain).TriggerStateSave().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1837777672: 
                                return ((IRoomGrain)grain).GetPrintableInfo().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1323204773: 
                                return ((IRoomGrain)grain).UpdateThing((Thing)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }}
            catch(Exception ex)
            {{
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }}
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 610565351:  // IRoomGrain
                    switch (methodId)
                    {
                        case 1171509521:
                            return "Description";
                    case 1141864742:
                            return "SetInfo";
                    case -67873697:
                            return "Name";
                    case 1494795367:
                            return "ExitTo";
                    case -1976773196:
                            return "ExitTo";
                    case -1179561461:
                            return "RoomId";
                    case -568647742:
                            return "Enter";
                    case 830465437:
                            return "Exit";
                    case 1814198720:
                            return "Enter";
                    case -1087910179:
                            return "Exit";
                    case 242302708:
                            return "Enter";
                    case 1425340485:
                            return "Exit";
                    case 1453036231:
                            return "Drop";
                    case 1542534434:
                            return "Take";
                    case -1840220455:
                            return "FindThing";
                    case 22289778:
                            return "FindPlayer";
                    case -649945656:
                            return "FindMonster";
                    case 2134119307:
                            return "FindNpc";
                    case 1848004524:
                            return "GetPlayersInRoom";
                    case -1370817314:
                            return "ClearGrainAndState";
                    case 2141844554:
                            return "TriggerStateSave";
                    case 1837777672:
                            return "GetPrintableInfo";
                    case -1323204773:
                            return "UpdateThing";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class UniverseGrainFactory
    {
        

                        public static AdventureTerreInterfaces.GrainInterfaces.IUniverseGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IUniverseGrain), 570472017, primaryKey));
                        }

                        public static AdventureTerreInterfaces.GrainInterfaces.IUniverseGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IUniverseGrain), 570472017, primaryKey, grainClassNamePrefix));
                        }

                        public static AdventureTerreInterfaces.GrainInterfaces.IUniverseGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IUniverseGrain), 570472017, primaryKey));
                        }

                        public static AdventureTerreInterfaces.GrainInterfaces.IUniverseGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IUniverseGrain), 570472017, primaryKey, grainClassNamePrefix));
                        }

            public static AdventureTerreInterfaces.GrainInterfaces.IUniverseGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return UniverseGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
            ".IUniverseGrain")]
        internal class UniverseGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, AdventureTerreInterfaces.GrainInterfaces.IUniverseGrain
        {
            

            public static AdventureTerreInterfaces.GrainInterfaces.IUniverseGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (AdventureTerreInterfaces.GrainInterfaces.IUniverseGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(AdventureTerreInterfaces.GrainInterfaces.IUniverseGrain), (global::Orleans.Runtime.GrainReference gr) => { return new UniverseGrainReference(gr);}, grainRef, 570472017);
            }
            
            protected internal UniverseGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal UniverseGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 570472017;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
                        ".IUniverseGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                UniverseGrainReference input = ((UniverseGrainReference)(original));
                return ((UniverseGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                UniverseGrainReference input = ((UniverseGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return UniverseGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return UniverseGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("AdventureTerreInterfaces.GrainInterfaces.AdventureTerreInterfaces.GrainInterfaces" +
        ".IUniverseGrain", 570472017)]
    internal class UniverseGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 570472017;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {{                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 570472017:  // IUniverseGrain
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }}
            catch(Exception ex)
            {{
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }}
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 570472017:  // IUniverseGrain
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
namespace AdventureTerreInterfacesSerializers
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using AdventureTerreInterfaces.Models;
    using AdventureTerreInterfaces.GrainInterfaces;
    using System.Collections;
    using System.Runtime.InteropServices;
    using System.Runtime.Serialization;
    using Orleans.Runtime;
    using Orleans;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class AdventureTerreInterfaces_Models_MapInfoSerialization
    {
        
        static AdventureTerreInterfaces_Models_MapInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            AdventureTerreInterfaces.Models.MapInfo input = ((AdventureTerreInterfaces.Models.MapInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Categories, stream, typeof(List<CategoryInfo>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Monsters, stream, typeof(List<MonsterInfo>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(String));
            Orleans.Serialization.SerializationManager.SerializeInner(input.NPCs, stream, typeof(List<NPCInfo>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Rooms, stream, typeof(List<RoomInfo>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.stateChangeActions, stream, typeof(List<StateChangeAction>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Things, stream, typeof(List<Thing>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            AdventureTerreInterfaces.Models.MapInfo result = new AdventureTerreInterfaces.Models.MapInfo();
            result.Categories = ((List<CategoryInfo>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<CategoryInfo>), stream)));
            result.Monsters = ((List<MonsterInfo>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<MonsterInfo>), stream)));
            result.Name = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            result.NPCs = ((List<NPCInfo>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<NPCInfo>), stream)));
            result.Rooms = ((List<RoomInfo>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<RoomInfo>), stream)));
            result.stateChangeActions = ((List<StateChangeAction>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<StateChangeAction>), stream)));
            result.Things = ((List<Thing>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<Thing>), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(AdventureTerreInterfaces.Models.MapInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class AdventureTerreInterfaces_Models_CategoryInfoSerialization
    {
        
        static AdventureTerreInterfaces_Models_CategoryInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            AdventureTerreInterfaces.Models.CategoryInfo input = ((AdventureTerreInterfaces.Models.CategoryInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Commands, stream, typeof(List<String>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Id, stream, typeof(Int64));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(String));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            AdventureTerreInterfaces.Models.CategoryInfo result = new AdventureTerreInterfaces.Models.CategoryInfo();
            result.Commands = ((List<String>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<String>), stream)));
            result.Id = ((Int64)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Int64), stream)));
            result.Name = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(AdventureTerreInterfaces.Models.CategoryInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class AdventureTerreInterfaces_Models_MonsterInfoSerialization
    {
        
        static AdventureTerreInterfaces_Models_MonsterInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            AdventureTerreInterfaces.Models.MonsterInfo input = ((AdventureTerreInterfaces.Models.MonsterInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Descriptors, stream, typeof(List<Descriptor>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Id, stream, typeof(Int64));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Key, stream, typeof(Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.KilledBy, stream, typeof(List<Int64>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MovesRandomly, stream, typeof(Boolean));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(String));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Responses, stream, typeof(List<Descriptor>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StartIn, stream, typeof(Int64));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            AdventureTerreInterfaces.Models.MonsterInfo result = new AdventureTerreInterfaces.Models.MonsterInfo();
            result.Descriptors = ((List<Descriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<Descriptor>), stream)));
            result.Id = ((Int64)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Int64), stream)));
            result.Key = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            result.KilledBy = ((List<Int64>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<Int64>), stream)));
            result.MovesRandomly = ((Boolean)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Boolean), stream)));
            result.Name = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            result.Responses = ((List<Descriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<Descriptor>), stream)));
            result.StartIn = ((Int64)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Int64), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(AdventureTerreInterfaces.Models.MonsterInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class AdventureTerreInterfaces_Models_DescriptorSerialization
    {
        
        static AdventureTerreInterfaces_Models_DescriptorSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            AdventureTerreInterfaces.Models.Descriptor input = ((AdventureTerreInterfaces.Models.Descriptor)(original));
            AdventureTerreInterfaces.Models.Descriptor result = new AdventureTerreInterfaces.Models.Descriptor();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Flags = ((Dictionary<String,Boolean>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Flags)));
            result.IsDefault = input.IsDefault;
            result.Name = input.Name;
            result.SetFlags = ((Dictionary<String,Boolean>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.SetFlags)));
            result.Text = input.Text;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            AdventureTerreInterfaces.Models.Descriptor input = ((AdventureTerreInterfaces.Models.Descriptor)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Flags, stream, typeof(Dictionary<String,Boolean>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsDefault, stream, typeof(Boolean));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(String));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SetFlags, stream, typeof(Dictionary<String,Boolean>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Text, stream, typeof(String));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            AdventureTerreInterfaces.Models.Descriptor result = new AdventureTerreInterfaces.Models.Descriptor();
            result.Flags = ((Dictionary<String,Boolean>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dictionary<String,Boolean>), stream)));
            result.IsDefault = ((Boolean)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Boolean), stream)));
            result.Name = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            result.SetFlags = ((Dictionary<String,Boolean>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dictionary<String,Boolean>), stream)));
            result.Text = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(AdventureTerreInterfaces.Models.Descriptor), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class AdventureTerreInterfaces_Models_NPCInfoSerialization
    {
        
        static AdventureTerreInterfaces_Models_NPCInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            AdventureTerreInterfaces.Models.NPCInfo input = ((AdventureTerreInterfaces.Models.NPCInfo)(original));
            AdventureTerreInterfaces.Models.NPCInfo result = new AdventureTerreInterfaces.Models.NPCInfo();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Descriptors = ((List<Descriptor>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Descriptors)));
            result.Id = input.Id;
            result.Key = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Key)));
            result.MovesRandomly = input.MovesRandomly;
            result.Name = input.Name;
            result.Responses = ((List<Descriptor>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Responses)));
            result.StartIn = input.StartIn;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            AdventureTerreInterfaces.Models.NPCInfo input = ((AdventureTerreInterfaces.Models.NPCInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Descriptors, stream, typeof(List<Descriptor>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Id, stream, typeof(Int64));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Key, stream, typeof(Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MovesRandomly, stream, typeof(Boolean));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(String));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Responses, stream, typeof(List<Descriptor>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StartIn, stream, typeof(Int64));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            AdventureTerreInterfaces.Models.NPCInfo result = new AdventureTerreInterfaces.Models.NPCInfo();
            result.Descriptors = ((List<Descriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<Descriptor>), stream)));
            result.Id = ((Int64)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Int64), stream)));
            result.Key = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            result.MovesRandomly = ((Boolean)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Boolean), stream)));
            result.Name = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            result.Responses = ((List<Descriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<Descriptor>), stream)));
            result.StartIn = ((Int64)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Int64), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(AdventureTerreInterfaces.Models.NPCInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class AdventureTerreInterfaces_Models_PlayerInfoSerialization
    {
        
        static AdventureTerreInterfaces_Models_PlayerInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            AdventureTerreInterfaces.Models.PlayerInfo input = ((AdventureTerreInterfaces.Models.PlayerInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Key, stream, typeof(Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(String));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            AdventureTerreInterfaces.Models.PlayerInfo result = new AdventureTerreInterfaces.Models.PlayerInfo();
            result.Key = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            result.Name = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(AdventureTerreInterfaces.Models.PlayerInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class AdventureTerreInterfaces_Models_RoomInfoSerialization
    {
        
        static AdventureTerreInterfaces_Models_RoomInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            AdventureTerreInterfaces.Models.RoomInfo input = ((AdventureTerreInterfaces.Models.RoomInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Descriptors, stream, typeof(List<Descriptor>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Directions, stream, typeof(List<Direction>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Id, stream, typeof(Int64));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(String));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            AdventureTerreInterfaces.Models.RoomInfo result = new AdventureTerreInterfaces.Models.RoomInfo();
            result.Descriptors = ((List<Descriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<Descriptor>), stream)));
            result.Directions = ((List<Direction>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<Direction>), stream)));
            result.Id = ((Int64)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Int64), stream)));
            result.Name = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(AdventureTerreInterfaces.Models.RoomInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class AdventureTerreInterfaces_Models_DirectionSerialization
    {
        
        static AdventureTerreInterfaces_Models_DirectionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            AdventureTerreInterfaces.Models.Direction input = ((AdventureTerreInterfaces.Models.Direction)(original));
            AdventureTerreInterfaces.Models.Direction result = new AdventureTerreInterfaces.Models.Direction();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Cardinal = input.Cardinal;
            result.Flags = ((Dictionary<String,Boolean>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Flags)));
            result.Room = ((IRoomGrain)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Room)));
            result.RoomId = input.RoomId;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            AdventureTerreInterfaces.Models.Direction input = ((AdventureTerreInterfaces.Models.Direction)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Cardinal, stream, typeof(String));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Flags, stream, typeof(Dictionary<String,Boolean>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Room, stream, typeof(IRoomGrain));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RoomId, stream, typeof(Int64));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            AdventureTerreInterfaces.Models.Direction result = new AdventureTerreInterfaces.Models.Direction();
            result.Cardinal = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            result.Flags = ((Dictionary<String,Boolean>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Dictionary<String,Boolean>), stream)));
            result.Room = ((IRoomGrain)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(IRoomGrain), stream)));
            result.RoomId = ((Int64)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Int64), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(AdventureTerreInterfaces.Models.Direction), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class AdventureTerreInterfaces_Models_ThingSerialization
    {
        
        static AdventureTerreInterfaces_Models_ThingSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            AdventureTerreInterfaces.Models.Thing input = ((AdventureTerreInterfaces.Models.Thing)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Category, stream, typeof(String));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CommandActions, stream, typeof(List<CommandAction>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Descriptors, stream, typeof(List<Descriptor>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FoundIn, stream, typeof(Int64));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Id, stream, typeof(Int64));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(String));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            AdventureTerreInterfaces.Models.Thing result = new AdventureTerreInterfaces.Models.Thing();
            result.Category = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            result.CommandActions = ((List<CommandAction>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<CommandAction>), stream)));
            result.Descriptors = ((List<Descriptor>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<Descriptor>), stream)));
            result.FoundIn = ((Int64)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Int64), stream)));
            result.Id = ((Int64)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Int64), stream)));
            result.Name = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(AdventureTerreInterfaces.Models.Thing), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class AdventureTerreInterfaces_Models_CommandActionSerialization
    {
        
        static AdventureTerreInterfaces_Models_CommandActionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            AdventureTerreInterfaces.Models.CommandAction input = ((AdventureTerreInterfaces.Models.CommandAction)(original));
            AdventureTerreInterfaces.Models.CommandAction result = new AdventureTerreInterfaces.Models.CommandAction();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.CommandName = input.CommandName;
            result.Flag = input.Flag;
            result.NewValue = input.NewValue;
            result.ShouldFlip = input.ShouldFlip;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            AdventureTerreInterfaces.Models.CommandAction input = ((AdventureTerreInterfaces.Models.CommandAction)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CommandName, stream, typeof(String));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Flag, stream, typeof(String));
            Orleans.Serialization.SerializationManager.SerializeInner(input.NewValue, stream, typeof(Boolean));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ShouldFlip, stream, typeof(Boolean));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            AdventureTerreInterfaces.Models.CommandAction result = new AdventureTerreInterfaces.Models.CommandAction();
            result.CommandName = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            result.Flag = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            result.NewValue = ((Boolean)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Boolean), stream)));
            result.ShouldFlip = ((Boolean)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Boolean), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(AdventureTerreInterfaces.Models.CommandAction), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.970.29197")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class AdventureTerreInterfaces_Models_StateChangeActionSerialization
    {
        
        static AdventureTerreInterfaces_Models_StateChangeActionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            AdventureTerreInterfaces.Models.StateChangeAction input = ((AdventureTerreInterfaces.Models.StateChangeAction)(original));
            AdventureTerreInterfaces.Models.StateChangeAction result = new AdventureTerreInterfaces.Models.StateChangeAction();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Flag = input.Flag;
            result.PrintText = input.PrintText;
            result.ToValue = input.ToValue;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            AdventureTerreInterfaces.Models.StateChangeAction input = ((AdventureTerreInterfaces.Models.StateChangeAction)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Flag, stream, typeof(String));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PrintText, stream, typeof(String));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ToValue, stream, typeof(Boolean));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            AdventureTerreInterfaces.Models.StateChangeAction result = new AdventureTerreInterfaces.Models.StateChangeAction();
            result.Flag = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            result.PrintText = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            result.ToValue = ((Boolean)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Boolean), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(AdventureTerreInterfaces.Models.StateChangeAction), DeepCopier, Serializer, Deserializer);
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
